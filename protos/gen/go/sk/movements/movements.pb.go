// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        v5.29.1
// source: sk/movements/movements.proto

package movements

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Перемещение продукции
type MovementResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProductId      int64                  `protobuf:"varint,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	FromLocationId *int32                 `protobuf:"varint,3,opt,name=from_location_id,json=fromLocationId,proto3,oneof" json:"from_location_id,omitempty"` // NULL если отсутствует
	ToLocationId   *int32                 `protobuf:"varint,4,opt,name=to_location_id,json=toLocationId,proto3,oneof" json:"to_location_id,omitempty"`       // NULL если отсутствует
	UserId         int32                  `protobuf:"varint,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Comment        *string                `protobuf:"bytes,6,opt,name=comment,proto3,oneof" json:"comment,omitempty"` // NULL если отсутствует
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt      *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	RemovedAt      *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=removed_at,json=removedAt,proto3,oneof" json:"removed_at,omitempty"` // NULL если не удалено
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MovementResponse) Reset() {
	*x = MovementResponse{}
	mi := &file_sk_movements_movements_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MovementResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovementResponse) ProtoMessage() {}

func (x *MovementResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sk_movements_movements_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovementResponse.ProtoReflect.Descriptor instead.
func (*MovementResponse) Descriptor() ([]byte, []int) {
	return file_sk_movements_movements_proto_rawDescGZIP(), []int{0}
}

func (x *MovementResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MovementResponse) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *MovementResponse) GetFromLocationId() int32 {
	if x != nil && x.FromLocationId != nil {
		return *x.FromLocationId
	}
	return 0
}

func (x *MovementResponse) GetToLocationId() int32 {
	if x != nil && x.ToLocationId != nil {
		return *x.ToLocationId
	}
	return 0
}

func (x *MovementResponse) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *MovementResponse) GetComment() string {
	if x != nil && x.Comment != nil {
		return *x.Comment
	}
	return ""
}

func (x *MovementResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *MovementResponse) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *MovementResponse) GetRemovedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.RemovedAt
	}
	return nil
}

// Запрос на создание перемещения
type CreateMovementRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ProductId      int64                  `protobuf:"varint,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`                        // Обязательное поле
	FromLocationId *int32                 `protobuf:"varint,2,opt,name=from_location_id,json=fromLocationId,proto3,oneof" json:"from_location_id,omitempty"` // Опционально (NULL)
	ToLocationId   *int32                 `protobuf:"varint,3,opt,name=to_location_id,json=toLocationId,proto3,oneof" json:"to_location_id,omitempty"`       // Опционально (NULL)
	UserId         int32                  `protobuf:"varint,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                 // Обязательное поле
	Comment        *string                `protobuf:"bytes,5,opt,name=comment,proto3,oneof" json:"comment,omitempty"`                                        // Опционально (NULL)
	StatusId       int32                  `protobuf:"varint,6,opt,name=status_id,json=statusId,proto3" json:"status_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateMovementRequest) Reset() {
	*x = CreateMovementRequest{}
	mi := &file_sk_movements_movements_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateMovementRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMovementRequest) ProtoMessage() {}

func (x *CreateMovementRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sk_movements_movements_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMovementRequest.ProtoReflect.Descriptor instead.
func (*CreateMovementRequest) Descriptor() ([]byte, []int) {
	return file_sk_movements_movements_proto_rawDescGZIP(), []int{1}
}

func (x *CreateMovementRequest) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *CreateMovementRequest) GetFromLocationId() int32 {
	if x != nil && x.FromLocationId != nil {
		return *x.FromLocationId
	}
	return 0
}

func (x *CreateMovementRequest) GetToLocationId() int32 {
	if x != nil && x.ToLocationId != nil {
		return *x.ToLocationId
	}
	return 0
}

func (x *CreateMovementRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateMovementRequest) GetComment() string {
	if x != nil && x.Comment != nil {
		return *x.Comment
	}
	return ""
}

func (x *CreateMovementRequest) GetStatusId() int32 {
	if x != nil {
		return x.StatusId
	}
	return 0
}

type UpdateMovementRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProductId      int64                  `protobuf:"varint,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	FromLocationId int32                  `protobuf:"varint,3,opt,name=from_location_id,json=fromLocationId,proto3" json:"from_location_id,omitempty"`
	ToLocationId   int32                  `protobuf:"varint,4,opt,name=to_location_id,json=toLocationId,proto3" json:"to_location_id,omitempty"`
	UserId         int32                  `protobuf:"varint,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Comment        string                 `protobuf:"bytes,6,opt,name=comment,proto3" json:"comment,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UpdateMovementRequest) Reset() {
	*x = UpdateMovementRequest{}
	mi := &file_sk_movements_movements_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateMovementRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMovementRequest) ProtoMessage() {}

func (x *UpdateMovementRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sk_movements_movements_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMovementRequest.ProtoReflect.Descriptor instead.
func (*UpdateMovementRequest) Descriptor() ([]byte, []int) {
	return file_sk_movements_movements_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateMovementRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateMovementRequest) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *UpdateMovementRequest) GetFromLocationId() int32 {
	if x != nil {
		return x.FromLocationId
	}
	return 0
}

func (x *UpdateMovementRequest) GetToLocationId() int32 {
	if x != nil {
		return x.ToLocationId
	}
	return 0
}

func (x *UpdateMovementRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateMovementRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type ListMovementsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProductId     int64                  `protobuf:"varint,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`          // Фильтр по продукту (опционально)
	LocationId    *int32                 `protobuf:"varint,2,opt,name=location_id,json=locationId,proto3,oneof" json:"location_id,omitempty"` // Фильтр по любой локации (from/to)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMovementsRequest) Reset() {
	*x = ListMovementsRequest{}
	mi := &file_sk_movements_movements_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMovementsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMovementsRequest) ProtoMessage() {}

func (x *ListMovementsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sk_movements_movements_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMovementsRequest.ProtoReflect.Descriptor instead.
func (*ListMovementsRequest) Descriptor() ([]byte, []int) {
	return file_sk_movements_movements_proto_rawDescGZIP(), []int{3}
}

func (x *ListMovementsRequest) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *ListMovementsRequest) GetLocationId() int32 {
	if x != nil && x.LocationId != nil {
		return *x.LocationId
	}
	return 0
}

type GetMovementRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMovementRequest) Reset() {
	*x = GetMovementRequest{}
	mi := &file_sk_movements_movements_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMovementRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMovementRequest) ProtoMessage() {}

func (x *GetMovementRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sk_movements_movements_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMovementRequest.ProtoReflect.Descriptor instead.
func (*GetMovementRequest) Descriptor() ([]byte, []int) {
	return file_sk_movements_movements_proto_rawDescGZIP(), []int{4}
}

func (x *GetMovementRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteMovementRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteMovementRequest) Reset() {
	*x = DeleteMovementRequest{}
	mi := &file_sk_movements_movements_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMovementRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMovementRequest) ProtoMessage() {}

func (x *DeleteMovementRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sk_movements_movements_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMovementRequest.ProtoReflect.Descriptor instead.
func (*DeleteMovementRequest) Descriptor() ([]byte, []int) {
	return file_sk_movements_movements_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteMovementRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteMovementResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteMovementResponse) Reset() {
	*x = DeleteMovementResponse{}
	mi := &file_sk_movements_movements_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMovementResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMovementResponse) ProtoMessage() {}

func (x *DeleteMovementResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sk_movements_movements_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMovementResponse.ProtoReflect.Descriptor instead.
func (*DeleteMovementResponse) Descriptor() ([]byte, []int) {
	return file_sk_movements_movements_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteMovementResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type MovementListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []*MovementResponse    `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MovementListResponse) Reset() {
	*x = MovementListResponse{}
	mi := &file_sk_movements_movements_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MovementListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovementListResponse) ProtoMessage() {}

func (x *MovementListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sk_movements_movements_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovementListResponse.ProtoReflect.Descriptor instead.
func (*MovementListResponse) Descriptor() ([]byte, []int) {
	return file_sk_movements_movements_proto_rawDescGZIP(), []int{7}
}

func (x *MovementListResponse) GetData() []*MovementResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateProductRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	PartName           string                 `protobuf:"bytes,1,opt,name=part_name,json=partName,proto3" json:"part_name,omitempty"`
	Nomenclature       string                 `protobuf:"bytes,2,opt,name=nomenclature,proto3" json:"nomenclature,omitempty"`
	NumberFrame        int32                  `protobuf:"varint,3,opt,name=number_frame,json=numberFrame,proto3" json:"number_frame,omitempty"`
	CountSausageSticks *int32                 `protobuf:"varint,4,opt,name=count_sausage_sticks,json=countSausageSticks,proto3,oneof" json:"count_sausage_sticks,omitempty"`
	WeightSpKg         float64                `protobuf:"fixed64,5,opt,name=weight_sp_kg,json=weightSpKg,proto3" json:"weight_sp_kg,omitempty"`
	WeightGpKg         *float64               `protobuf:"fixed64,6,opt,name=weight_gp_kg,json=weightGpKg,proto3,oneof" json:"weight_gp_kg,omitempty"`
	ManufacturingDate  *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=manufacturing_date,json=manufacturingDate,proto3" json:"manufacturing_date,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CreateProductRequest) Reset() {
	*x = CreateProductRequest{}
	mi := &file_sk_movements_movements_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProductRequest) ProtoMessage() {}

func (x *CreateProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sk_movements_movements_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProductRequest.ProtoReflect.Descriptor instead.
func (*CreateProductRequest) Descriptor() ([]byte, []int) {
	return file_sk_movements_movements_proto_rawDescGZIP(), []int{8}
}

func (x *CreateProductRequest) GetPartName() string {
	if x != nil {
		return x.PartName
	}
	return ""
}

func (x *CreateProductRequest) GetNomenclature() string {
	if x != nil {
		return x.Nomenclature
	}
	return ""
}

func (x *CreateProductRequest) GetNumberFrame() int32 {
	if x != nil {
		return x.NumberFrame
	}
	return 0
}

func (x *CreateProductRequest) GetCountSausageSticks() int32 {
	if x != nil && x.CountSausageSticks != nil {
		return *x.CountSausageSticks
	}
	return 0
}

func (x *CreateProductRequest) GetWeightSpKg() float64 {
	if x != nil {
		return x.WeightSpKg
	}
	return 0
}

func (x *CreateProductRequest) GetWeightGpKg() float64 {
	if x != nil && x.WeightGpKg != nil {
		return *x.WeightGpKg
	}
	return 0
}

func (x *CreateProductRequest) GetManufacturingDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ManufacturingDate
	}
	return nil
}

type InitializeProductRequest struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Data          []*CreateProductRequest `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`                                        // Создаваемые продукты
	ToLocationId  int32                   `protobuf:"varint,2,opt,name=to_location_id,json=toLocationId,proto3" json:"to_location_id,omitempty"` // Целевая локация
	UserId        int32                   `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                     // Пользователь
	Comment       string                  `protobuf:"bytes,4,opt,name=comment,proto3" json:"comment,omitempty"`                                  // Комментарий к движению
	StatusId      int32                   `protobuf:"varint,5,opt,name=status_id,json=statusId,proto3" json:"status_id,omitempty"`               // Статус продукта
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InitializeProductRequest) Reset() {
	*x = InitializeProductRequest{}
	mi := &file_sk_movements_movements_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitializeProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitializeProductRequest) ProtoMessage() {}

func (x *InitializeProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sk_movements_movements_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitializeProductRequest.ProtoReflect.Descriptor instead.
func (*InitializeProductRequest) Descriptor() ([]byte, []int) {
	return file_sk_movements_movements_proto_rawDescGZIP(), []int{9}
}

func (x *InitializeProductRequest) GetData() []*CreateProductRequest {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *InitializeProductRequest) GetToLocationId() int32 {
	if x != nil {
		return x.ToLocationId
	}
	return 0
}

func (x *InitializeProductRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *InitializeProductRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *InitializeProductRequest) GetStatusId() int32 {
	if x != nil {
		return x.StatusId
	}
	return 0
}

type InitializeProductResponse struct {
	state           protoimpl.MessageState  `protogen:"open.v1"`
	CreatedProducts []*ProductResponse      `protobuf:"bytes,1,rep,name=created_products,json=createdProducts,proto3" json:"created_products,omitempty"` // Успех
	Errors          []*ProductCreationError `protobuf:"bytes,2,rep,name=errors,proto3" json:"errors,omitempty"`                                          // Ошибки
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *InitializeProductResponse) Reset() {
	*x = InitializeProductResponse{}
	mi := &file_sk_movements_movements_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitializeProductResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitializeProductResponse) ProtoMessage() {}

func (x *InitializeProductResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sk_movements_movements_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitializeProductResponse.ProtoReflect.Descriptor instead.
func (*InitializeProductResponse) Descriptor() ([]byte, []int) {
	return file_sk_movements_movements_proto_rawDescGZIP(), []int{10}
}

func (x *InitializeProductResponse) GetCreatedProducts() []*ProductResponse {
	if x != nil {
		return x.CreatedProducts
	}
	return nil
}

func (x *InitializeProductResponse) GetErrors() []*ProductCreationError {
	if x != nil {
		return x.Errors
	}
	return nil
}

type ProductCreationError struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DataIndex     int32                  `protobuf:"varint,1,opt,name=data_index,json=dataIndex,proto3" json:"data_index,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProductCreationError) Reset() {
	*x = ProductCreationError{}
	mi := &file_sk_movements_movements_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProductCreationError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductCreationError) ProtoMessage() {}

func (x *ProductCreationError) ProtoReflect() protoreflect.Message {
	mi := &file_sk_movements_movements_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductCreationError.ProtoReflect.Descriptor instead.
func (*ProductCreationError) Descriptor() ([]byte, []int) {
	return file_sk_movements_movements_proto_rawDescGZIP(), []int{11}
}

func (x *ProductCreationError) GetDataIndex() int32 {
	if x != nil {
		return x.DataIndex
	}
	return 0
}

func (x *ProductCreationError) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type ProductResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Id                 int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PartName           string                 `protobuf:"bytes,2,opt,name=part_name,json=partName,proto3" json:"part_name,omitempty"`
	Nomenclature       string                 `protobuf:"bytes,3,opt,name=nomenclature,proto3" json:"nomenclature,omitempty"`
	NumberFrame        int32                  `protobuf:"varint,4,opt,name=number_frame,json=numberFrame,proto3" json:"number_frame,omitempty"`
	CountSausageSticks *int32                 `protobuf:"varint,5,opt,name=count_sausage_sticks,json=countSausageSticks,proto3,oneof" json:"count_sausage_sticks,omitempty"`
	WeightSpKg         float64                `protobuf:"fixed64,6,opt,name=weight_sp_kg,json=weightSpKg,proto3" json:"weight_sp_kg,omitempty"`
	WeightGpKg         *float64               `protobuf:"fixed64,7,opt,name=weight_gp_kg,json=weightGpKg,proto3,oneof" json:"weight_gp_kg,omitempty"`
	ManufacturingDate  *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=manufacturing_date,json=manufacturingDate,proto3" json:"manufacturing_date,omitempty"`
	CreatedAt          *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	RemovedAt          *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=removed_at,json=removedAt,proto3,oneof" json:"removed_at,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ProductResponse) Reset() {
	*x = ProductResponse{}
	mi := &file_sk_movements_movements_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProductResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductResponse) ProtoMessage() {}

func (x *ProductResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sk_movements_movements_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductResponse.ProtoReflect.Descriptor instead.
func (*ProductResponse) Descriptor() ([]byte, []int) {
	return file_sk_movements_movements_proto_rawDescGZIP(), []int{12}
}

func (x *ProductResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProductResponse) GetPartName() string {
	if x != nil {
		return x.PartName
	}
	return ""
}

func (x *ProductResponse) GetNomenclature() string {
	if x != nil {
		return x.Nomenclature
	}
	return ""
}

func (x *ProductResponse) GetNumberFrame() int32 {
	if x != nil {
		return x.NumberFrame
	}
	return 0
}

func (x *ProductResponse) GetCountSausageSticks() int32 {
	if x != nil && x.CountSausageSticks != nil {
		return *x.CountSausageSticks
	}
	return 0
}

func (x *ProductResponse) GetWeightSpKg() float64 {
	if x != nil {
		return x.WeightSpKg
	}
	return 0
}

func (x *ProductResponse) GetWeightGpKg() float64 {
	if x != nil && x.WeightGpKg != nil {
		return *x.WeightGpKg
	}
	return 0
}

func (x *ProductResponse) GetManufacturingDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ManufacturingDate
	}
	return nil
}

func (x *ProductResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ProductResponse) GetRemovedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.RemovedAt
	}
	return nil
}

var File_sk_movements_movements_proto protoreflect.FileDescriptor

var file_sk_movements_movements_proto_rawDesc = string([]byte{
	0x0a, 0x1c, 0x73, 0x6b, 0x2f, 0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x6d,
	0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c,
	0x73, 0x6b, 0x2e, 0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcc, 0x03,
	0x0a, 0x10, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x2d, 0x0a, 0x10, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0e, 0x66,
	0x72, 0x6f, 0x6d, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x29, 0x0a, 0x0e, 0x74, 0x6f, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x0c, 0x74, 0x6f, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3e, 0x0a, 0x0a, 0x72, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x03, 0x52, 0x09, 0x72, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x66, 0x72,
	0x6f, 0x6d, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x42, 0x11,
	0x0a, 0x0f, 0x5f, 0x74, 0x6f, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x0d, 0x0a,
	0x0b, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x22, 0x99, 0x02, 0x0a,
	0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x10, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x00, 0x52, 0x0e, 0x66, 0x72, 0x6f, 0x6d, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0e, 0x74, 0x6f, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x0c,
	0x74, 0x6f, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x07, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x49, 0x64, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x74, 0x6f,
	0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x42, 0x0a, 0x0a, 0x08,
	0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xc9, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x28, 0x0a, 0x10, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x66, 0x72, 0x6f,
	0x6d, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x74,
	0x6f, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x74, 0x6f, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x22, 0x6b, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x76, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0b, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x00, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x88, 0x01,
	0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x22, 0x24, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x27, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x32, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x22, 0x4a, 0x0a, 0x14, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x6b, 0x2e,
	0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0xef, 0x02, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61,
	0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x63,
	0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6e, 0x6f,
	0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a,
	0x14, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x61, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x74, 0x69, 0x63, 0x6b, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x12, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x53, 0x61, 0x75, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x69, 0x63, 0x6b,
	0x73, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x0c, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x73,
	0x70, 0x5f, 0x6b, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x77, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x53, 0x70, 0x4b, 0x67, 0x12, 0x25, 0x0a, 0x0c, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x5f, 0x67, 0x70, 0x5f, 0x6b, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x48, 0x01, 0x52, 0x0a,
	0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x47, 0x70, 0x4b, 0x67, 0x88, 0x01, 0x01, 0x12, 0x49, 0x0a,
	0x12, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x11, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75,
	0x72, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x65, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x73, 0x61, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x74, 0x69, 0x63, 0x6b,
	0x73, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x67, 0x70, 0x5f,
	0x6b, 0x67, 0x22, 0xc8, 0x01, 0x0a, 0x18, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a,
	0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x36, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x73, 0x6b, 0x2e, 0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x6f, 0x5f, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x74, 0x6f, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64, 0x22, 0xa1, 0x01,
	0x0a, 0x19, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x10, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x6b, 0x2e, 0x6d, 0x6f, 0x76, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x3a, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x6b, 0x2e, 0x6d, 0x6f, 0x76, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x73, 0x22, 0x5a, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64,
	0x61, 0x74, 0x61, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x84, 0x04,
	0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x66, 0x72, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x14, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73,
	0x61, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x12, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x61, 0x75, 0x73,
	0x61, 0x67, 0x65, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x73, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x0c,
	0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x73, 0x70, 0x5f, 0x6b, 0x67, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0a, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x53, 0x70, 0x4b, 0x67, 0x12, 0x25,
	0x0a, 0x0c, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x67, 0x70, 0x5f, 0x6b, 0x67, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x01, 0x48, 0x01, 0x52, 0x0a, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x47, 0x70,
	0x4b, 0x67, 0x88, 0x01, 0x01, 0x12, 0x49, 0x0a, 0x12, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63,
	0x74, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x11, 0x6d,
	0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3e, 0x0a, 0x0a, 0x72,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x02, 0x52, 0x09, 0x72,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x42, 0x17, 0x0a, 0x15, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x61, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x74,
	0x69, 0x63, 0x6b, 0x73, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f,
	0x67, 0x70, 0x5f, 0x6b, 0x67, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x32, 0xac, 0x04, 0x0a, 0x0f, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x55, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x2e, 0x73, 0x6b, 0x2e,
	0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1e, 0x2e, 0x73, 0x6b, 0x2e, 0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x4d,
	0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4f, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x20,
	0x2e, 0x73, 0x6b, 0x2e, 0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x73, 0x6b, 0x2e, 0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x55, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x23, 0x2e, 0x73, 0x6b, 0x2e, 0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x6b, 0x2e, 0x6d, 0x6f, 0x76,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x2e, 0x73, 0x6b, 0x2e, 0x6d,
	0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24,
	0x2e, 0x73, 0x6b, 0x2e, 0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x76, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x22, 0x2e, 0x73, 0x6b, 0x2e, 0x6d, 0x6f, 0x76, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x6b, 0x2e, 0x6d,
	0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a,
	0x11, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x12, 0x26, 0x2e, 0x73, 0x6b, 0x2e, 0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x73, 0x6b, 0x2e,
	0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x6c, 0x69, 0x7a, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x11, 0x5a, 0x0f, 0x73, 0x6b, 0x2e, 0x76, 0x31, 0x3b, 0x6d, 0x6f, 0x76,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_sk_movements_movements_proto_rawDescOnce sync.Once
	file_sk_movements_movements_proto_rawDescData []byte
)

func file_sk_movements_movements_proto_rawDescGZIP() []byte {
	file_sk_movements_movements_proto_rawDescOnce.Do(func() {
		file_sk_movements_movements_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_sk_movements_movements_proto_rawDesc), len(file_sk_movements_movements_proto_rawDesc)))
	})
	return file_sk_movements_movements_proto_rawDescData
}

var file_sk_movements_movements_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_sk_movements_movements_proto_goTypes = []any{
	(*MovementResponse)(nil),          // 0: sk.movements.MovementResponse
	(*CreateMovementRequest)(nil),     // 1: sk.movements.CreateMovementRequest
	(*UpdateMovementRequest)(nil),     // 2: sk.movements.UpdateMovementRequest
	(*ListMovementsRequest)(nil),      // 3: sk.movements.ListMovementsRequest
	(*GetMovementRequest)(nil),        // 4: sk.movements.GetMovementRequest
	(*DeleteMovementRequest)(nil),     // 5: sk.movements.DeleteMovementRequest
	(*DeleteMovementResponse)(nil),    // 6: sk.movements.DeleteMovementResponse
	(*MovementListResponse)(nil),      // 7: sk.movements.MovementListResponse
	(*CreateProductRequest)(nil),      // 8: sk.movements.CreateProductRequest
	(*InitializeProductRequest)(nil),  // 9: sk.movements.InitializeProductRequest
	(*InitializeProductResponse)(nil), // 10: sk.movements.InitializeProductResponse
	(*ProductCreationError)(nil),      // 11: sk.movements.ProductCreationError
	(*ProductResponse)(nil),           // 12: sk.movements.ProductResponse
	(*timestamppb.Timestamp)(nil),     // 13: google.protobuf.Timestamp
}
var file_sk_movements_movements_proto_depIdxs = []int32{
	13, // 0: sk.movements.MovementResponse.created_at:type_name -> google.protobuf.Timestamp
	13, // 1: sk.movements.MovementResponse.updated_at:type_name -> google.protobuf.Timestamp
	13, // 2: sk.movements.MovementResponse.removed_at:type_name -> google.protobuf.Timestamp
	0,  // 3: sk.movements.MovementListResponse.data:type_name -> sk.movements.MovementResponse
	13, // 4: sk.movements.CreateProductRequest.manufacturing_date:type_name -> google.protobuf.Timestamp
	8,  // 5: sk.movements.InitializeProductRequest.data:type_name -> sk.movements.CreateProductRequest
	12, // 6: sk.movements.InitializeProductResponse.created_products:type_name -> sk.movements.ProductResponse
	11, // 7: sk.movements.InitializeProductResponse.errors:type_name -> sk.movements.ProductCreationError
	13, // 8: sk.movements.ProductResponse.manufacturing_date:type_name -> google.protobuf.Timestamp
	13, // 9: sk.movements.ProductResponse.created_at:type_name -> google.protobuf.Timestamp
	13, // 10: sk.movements.ProductResponse.removed_at:type_name -> google.protobuf.Timestamp
	1,  // 11: sk.movements.MovementService.CreateMovement:input_type -> sk.movements.CreateMovementRequest
	4,  // 12: sk.movements.MovementService.GetMovement:input_type -> sk.movements.GetMovementRequest
	2,  // 13: sk.movements.MovementService.UpdateMovement:input_type -> sk.movements.UpdateMovementRequest
	5,  // 14: sk.movements.MovementService.DeleteMovement:input_type -> sk.movements.DeleteMovementRequest
	3,  // 15: sk.movements.MovementService.ListMovements:input_type -> sk.movements.ListMovementsRequest
	9,  // 16: sk.movements.MovementService.InitializeProduct:input_type -> sk.movements.InitializeProductRequest
	0,  // 17: sk.movements.MovementService.CreateMovement:output_type -> sk.movements.MovementResponse
	0,  // 18: sk.movements.MovementService.GetMovement:output_type -> sk.movements.MovementResponse
	0,  // 19: sk.movements.MovementService.UpdateMovement:output_type -> sk.movements.MovementResponse
	6,  // 20: sk.movements.MovementService.DeleteMovement:output_type -> sk.movements.DeleteMovementResponse
	7,  // 21: sk.movements.MovementService.ListMovements:output_type -> sk.movements.MovementListResponse
	10, // 22: sk.movements.MovementService.InitializeProduct:output_type -> sk.movements.InitializeProductResponse
	17, // [17:23] is the sub-list for method output_type
	11, // [11:17] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_sk_movements_movements_proto_init() }
func file_sk_movements_movements_proto_init() {
	if File_sk_movements_movements_proto != nil {
		return
	}
	file_sk_movements_movements_proto_msgTypes[0].OneofWrappers = []any{}
	file_sk_movements_movements_proto_msgTypes[1].OneofWrappers = []any{}
	file_sk_movements_movements_proto_msgTypes[3].OneofWrappers = []any{}
	file_sk_movements_movements_proto_msgTypes[8].OneofWrappers = []any{}
	file_sk_movements_movements_proto_msgTypes[12].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_sk_movements_movements_proto_rawDesc), len(file_sk_movements_movements_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sk_movements_movements_proto_goTypes,
		DependencyIndexes: file_sk_movements_movements_proto_depIdxs,
		MessageInfos:      file_sk_movements_movements_proto_msgTypes,
	}.Build()
	File_sk_movements_movements_proto = out.File
	file_sk_movements_movements_proto_goTypes = nil
	file_sk_movements_movements_proto_depIdxs = nil
}
